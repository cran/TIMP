##############################
## Datasets of Cosimo Bonneti
##############################

##############################
## load TIMP
##############################

require(TIMP)

##############################
## READ IN DATA 
##############################

C1 <- readData("4_6_uw0")
C2 <- readData("C015_016.ivom")
C3 <- readData("C017_018.ivom")
C4 <- readData("6966_10_11.ivom")

##############################
## PREPROCESS DATA
##############################

# select certain wavelengths for modeling 

C1_1 <- preProcess(data = C1, baselinetime = c(1,200,27,32))
C2_1 <- preProcess(data = C2, baselinelambda = c(1,12,1,32))

C2_1 <- preProcess(data = C2, baselinelambda = c(1,12,1,32))
C2_1 <- preProcess(data = C2_1, sel_lambda = c(10, 21))
C2_1 <- preProcess(data = C2_1, sel_time = c(7, 128))
C2_1 <- preProcess(data = C2_1, rm_x = c(112))

C3_1 <- preProcess(data = C3, baselinelambda = c(1,12,1,32))
C3_1 <- preProcess(data = C3_1, sel_lambda = c(10, 21))
C3_1 <- preProcess(data = C3_1, sel_time = c(7, 128))

C4_1 <- preProcess(data = C4, baselinelambda = c(2,12,1,32))
C4_1 <- preProcess(data = C4_1, sel_lambda = c(2, 32))

##############################
## SPECIFY K Matrix and J vector 
##############################

## initialize 2 7x7 arrays to 0 

delK <- array(0, dim=c(7,7,2))

## the matrix is indexed: 
## delK[ ROW K MATRIX, COL K MATRIX, matrix number] 

## in the first matrix, put the label of compartments 
## that are non-zero 

delK[1,1,1] <- 4
delK[5,1,1] <- 1
delK[2,2,1] <- 4
delK[5,2,1] <- 2
delK[3,3,1] <- 4
delK[5,3,1] <- 3
delK[4,4,1] <- 4
delK[6,5,1] <- 5
delK[7,6,1] <- 6
delK[7,7,1] <- 7

## print out the resulting array to make sure it's right

delK

jvector <- c(.48443195136500550341, .28740782363398824522, 
.13749071230100625137, 0.9066953510E-01, 0, 0, 0)

datalist <- list(C1_1, C2_1, C3_1, C4_1)
## for plotting selected traces, get a vector of all the wavenumbers 
allx2 <- vector()
for(i in 1:length(datalist)) 
	allx2 <- append(allx2,datalist[[i]]@x2)
allx2 <- sort(unique(allx2))

##############################
## SPECIFY INITIAL MODEL
##############################

model1 <- initModel(mod_type = "kin", 
kinpar=c( 0.13698630, 0.3448275849E-01, 0.1020408142E-01, 0.2941176528E-02, 
0.5000000075E-01, 0.6250000093E-02,  10.74E-05), 
fixed = list(prel = 1:6, clpequ=1:3, kinpar=1:7, irfpar=1:2, parmu=1),  
irfpar=c(0.1046652347, 0.6299000233E-01), 
prelspec = list(
list(what1="kinpar", ind1=1, what2 = "kinpar", ind2=4, start=c(-1,0.1369863003)), 
list(what1="kinpar", ind1=2, what2 = "kinpar", ind2=4, start=c(-1,0.3448275849E-01)), 
list(what1="kinpar", ind1=3, what2 = "kinpar", ind2=4, start=c(-1,0.1020408142E-01))
), 
parmu = list(c(-0.1679418422E-01)), 
lambdac = 1650,
kmat = delK,
jvec = jvector,
positivepar="kinpar",
weightpar=list( c(-20,.4,1,2000,.2)), 
clpequspec =list(
list(to=2, from=1, low=100, high=10000), 
list(to=3, from=1, low=100, high=10000),
list(to=4, from=1, low=100, high=10000)),
clpequ = c(1,1,1),
cohspec = list( type = "irf"))

##############################
## GET RESID 
## same format as call to fitModel, but does not plot
##############################

serResid<-getResid(list(C1_1, C2_1, C3_1, C4_1), list(model1), 
modeldiffs = list(thresh =  0.00005, 
dscal = list(
list(to=2,from=1,value=0.6359058619), 
list(to=3,from=1,value=1),
list(to=4,from=1,value=2)),  
free = list(
list(what="irfpar", ind=1, start= c(0.1259600520), dataset=2),
list(what="parmu", ind=c(1,1), start= c( 0.5236519501E-01), dataset=2),
list(what="irfpar", ind=1, start= c(0.1259600520), dataset=3),
list(what="parmu", ind=c(1,1), start= c(0.6437195837E-01), dataset=3), 
list(what="irfpar", ind=1, start= c(0.2241940349), dataset=4),
list(what="parmu", ind=c(1,1), start= c(0.2502118237E-01), dataset=4)), 
change  = list(
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=2, 
parmu=1, drel = 1), dataset=2), 
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=1:2, 
parmu=1, drel = 1), dataset=3), 
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=1:2, 
parmu=1, drel = 1), dataset=4))),  
opt=kinopt(iter=0, title="Cosimo Spectra, Not Normalized, with Error", 
stderrclp=TRUE, kinspecerr=TRUE, writespec = TRUE, 
plotkinspec = TRUE,plotcohcolspec=FALSE,
selectedtraces = seq(1, length(allx2), by=2), 
specinterpol = TRUE, specinterpolpoints=FALSE,
divdrel=TRUE, xlab="wavenumber",writeclperr = TRUE,
makeps = "err", linrange = 1, superimpose=1:3))

##############################
## MAKE CORRECTED DATASETS USING RESID INFO
## here we substract away the first 2 singular vectors 
##############################

C1_2 <- preProcess(data = C1_1, svdResid = serResid[[1]], numV = 2)
C2_2 <- preProcess(data = C2_1, svdResid = serResid[[2]], numV = 2)
C3_2 <- preProcess(data = C3_1, svdResid = serResid[[3]], numV = 2)
C4_2 <- preProcess(data = C4_1, svdResid = serResid[[4]], numV = 2)

##############################
## FIT MODEL 
##############################

serRes<-fitModel(list(C1_2, C2_2, C3_2, C4_2), list(model1), 
modeldiffs = list(thresh =  0.00005, 
dscal = list(
list(to=2,from=1,value=0.6359058619), 
list(to=3,from=1,value=1),
list(to=4,from=1,value=2)),  
free = list(
list(what="irfpar", ind=1, start= c(0.1259600520), dataset=2),
list(what="parmu", ind=c(1,1), start= c( 0.5236519501E-01), dataset=2),
list(what="irfpar", ind=1, start= c(0.1259600520), dataset=3),
list(what="parmu", ind=c(1,1), start= c(0.6437195837E-01), dataset=3), 
list(what="irfpar", ind=1, start= c(0.2241940349), dataset=4),
list(what="parmu", ind=c(1,1), start= c(0.2502118237E-01), dataset=4)), 
change  = list(
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=2, 
parmu=1, drel = 1), dataset=2), 
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=1:2, 
parmu=1, drel = 1), dataset=3), 
list(what="fixed", spec=list(clpequ=1:3, kinpar=1:7, irfpar=1:2, 
parmu=1, drel = 1), dataset=4))),  
opt=kinopt(iter=0, title="Cosimo Spectra, Not Normalized, with Error", 
stderrclp=TRUE, kinspecerr=TRUE, writespec = TRUE, 
plotkinspec = TRUE, plotcohcolspec=FALSE, summaryplotrow = 5, summaryplotcol=4,
selectedtraces = seq(1, length(allx2), by=2), 
specinterpol = TRUE, specinterpolpoints=FALSE,
divdrel=TRUE, xlab="wavenumber",writeclperr = TRUE,
makeps = "err", linrange = 1, superimpose=1:4))

